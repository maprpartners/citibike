wget https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-06-05/bin/linux/amd64/kubectl
chmod 755 kubectl
mv kubectl /usr/bin

wget https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-06-05/bin/linux/amd64/heptio-authenticator-aws
chmod 755 heptio-authenticator-aws
mv heptio-authenticator-aws /usr/bin

yum -y install git jq
pip install awscli --upgrade --user
aws configure  

clname=`aws eks list-clusters --region us-west-2 | jq .clusters[0] | sed 's/"//g'`
cert=`aws eks describe-cluster --name $clname --query cluster.certificateAuthority.data`
url=`aws eks describe-cluster --name $clname  --query cluster.endpoint`

aws iam create-policy --policy-name myekspolicy  --policy-document file://myekspolicy.json
echo Creating policy....

sleep 5
roleName=`aws iam list-roles | jq .[] | grep MapR600 | grep -v Arn | awk -F\: '{print $2}' | sed 's/["|,]//g'`
policyArn=`aws iam list-policies | grep myeks | grep -v PolicyName | awk -F\:\   '{print $2}' | sed 's/["|,]//g'`
echo Attaching policy....
aws iam attach-role-policy --role-name $roleName --policy-arn $policyArn

mkdir -p ~/.kube

cp config /tmp
sed -i s#\<endpoint-url\>#$url#g /tmp/config
sed -i s#\<base64-encoded-ca-cert\>#$cert#g /tmp/config

sed -i s#\<cluster-name\>#$clname#g /tmp/config

cp /tmp/config ~/.kube

echo Adding security group to the Sandbox

sandboxId=`aws ec2 describe-instances --filters "Name=tag:Name,Values=mapr600_sandbox_demo" | jq -r ".Reservations[] | .Instances[] | .InstanceId"`

workersg=`aws ec2 describe-instances --filters "Name=tag:Name,Values=*-Node" | jq -r ".Reservations[] | .Instances[] | .SecurityGroups[] | .GroupId" | uniq`

defaultsg=`aws ec2 describe-instances --filters "Name=tag:Name,Values=*mapr600_sandbox_demo" | jq -r ".Reservations[] | .Instances[] | .SecurityGroups[] " | grep -A 1 default  | grep -v default | awk -F\: '{print $2}' | sed 's/"//g'`

aws ec2 modify-instance-attribute --instance-id $sandboxId --groups $workersg $defaultsg

echo Done..
